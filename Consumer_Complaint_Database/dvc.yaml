stages:
  prepare:
    cmd: >-
      python prepare_benchmarking.py
  train:
    matrix:
      base_classifier: ${base_classifiers}
      model: ${models}
      random_state: ${random_states}
      train_split: ${train_splits}
      cal_split: ${cal_splits}
      n_jobs: ${n_jobs}
    # /usr/bin/time -v pwd 2>> test.txt
    cmd: >-
      python train.py 
      --base_classifier ${item.base_classifier}
      --model ${item.model}
      --n_jobs ${item.n_jobs}
      --random_state ${item.random_state}
      --train_split ${item.train_split}
      --cal_split ${item.cal_split}
    deps:
      - data/complaints.csv.zip
  calibrate:
    matrix: 
      base_classifier: ${base_classifiers}
      model: ${models}
      calibration_method: ${calibration_methods}
      random_state: ${random_states}
      train_split: ${train_splits}
      cal_split: ${cal_splits}
      n_jobs: ${n_jobs}
    cmd: >-
      python calibrate.py 
      --base_classifier ${item.base_classifier}
      --model ${item.model}
      --calibration_method ${item.calibration_method}
      --n_jobs ${item.n_jobs}
      --random_state ${item.random_state}
      --train_split ${item.train_split}
      --cal_split ${item.cal_split}
    deps:
    - data/complaints.csv.zip
  evaluate:
    matrix:
      base_classifier: ${base_classifiers}
      model: ${models}
      calibration_method: ${calibration_methods}
      random_state: ${random_states}
      train_split: ${train_splits}
      cal_split: ${cal_splits}
    cmd: >-
      python evaluate.py 
      --base_classifier ${item.base_classifier}
      --model ${item.model}
      --calibration_method ${item.calibration_method}
      --random_state ${item.random_state}
      --train_split ${item.train_split}
      --cal_split ${item.cal_split}
    deps:
    - data/complaints.csv.zip
